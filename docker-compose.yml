services:
# FLASK
  vote:
    build:
      context: ./vote
    depends_on:
      redis:
          condition: service_healthy
    volumes:
     - ./vote:/usr/local/app
    ports:
      - "5000:80"
    networks:
      - back-tier
      - front-tier

# EXPRESS
  result:
    build: ./result
    entrypoint: nodemon --inspect=0.0.0.0 server.js
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./result:/usr/local/app
    ports:
      - "5001:80"
    networks:
      - front-tier
      - back-tier

# C-SHARP
  worker:
    build:
      context: ./worker
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - back-tier

# REDIS
  redis:
    build:
      context: ./redis
    networks:
      - back-tier
    depends_on:
      - db

# POSTGRES
  db:
    build:
      context: ./postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier

# KAFKA
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - 8080:8080
    links:
      - kafka
    networks:
      - back-tier
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - back-tier
  
  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - back-tier


volumes:
  db-data:

networks:
  front-tier:
  back-tier: